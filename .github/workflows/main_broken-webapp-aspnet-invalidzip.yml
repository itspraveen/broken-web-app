name: Deploy - Invalid Zip App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_SERVICE_NAME: webapp-broken-invalidzip-${{ vars.ALIAS }}
  WEBAPP_URL: https://broken-webapp-aspnet-invalidzip-${{ vars.ALIAS }}.azurewebsites.net
  CONFIGURATION: 'Release'
  SUBSCRIPTION_ID: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E34A382294604AB38B20E873BFF2ED08 }}
  RESOURCE_GROUP_NAME: ${{ vars.RESOURCE_GROUP_NAME }}

jobs:
  deploy:
    runs-on: windows-latest
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
    - uses: actions/checkout@v4
  
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F0C7A6A53CD145789775B830B9CB8AAF }}
        tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D8A248E844C24894B15CE3E2EC150853 }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E34A382294604AB38B20E873BFF2ED08 }}

    - name: Deploy Bicep (Web App & App Service Plan)
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
        template: ./infra/main_broken-webapp-aspnet-invalidzip.bicep
        parameters: appServiceName=${{ env.APP_SERVICE_NAME }}

  test:
    needs: deploy
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      
    - name: Restore NuGet Packages
      run: nuget restore DiagnosticScenarios.sln
      
    - name: Build Solution
      run: msbuild DiagnosticScenarios.sln /p:Configuration=Release /p:Platform="Any CPU"
      
    - name: Install NUnit Console Runner
      run: nuget install NUnit.ConsoleRunner -Version 3.16.3 -OutputDirectory ./tools
      
    - name: Run Tests
      run: ./tools/NUnit.ConsoleRunner.3.16.3/tools/nunit3-console.exe DiagnosticScenarios.Tests/bin/Release/DiagnosticScenarios.Tests.dll --where "cat==InvalidZip"
      env:
        WEBAPP_URL: ${{ env.WEBAPP_URL }}
        RUN_SPECIALIZED_TESTS: InvalidZip 